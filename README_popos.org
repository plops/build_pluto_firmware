- attempt to build pluto firmware on Pop!_OS 22.04 LTS

- create xilinx account
- download vivado 2021.1 (~20GB download, 77GB installed)
  - Starting 2019.2, Xilinx SDK, SDSoC™ and SDAccel™ development
    environments are unified into an all-in-one Vitis™ unified
    software platform
    - i need vitis (with this, the whole install requires 102GB instead of 77GB)
      - note: after the install ~/Xilinx is 58GB
   
  https://wiki.analog.com/resources/fpga/docs/releases
  - depending on the version of the xilinx tools you may need 32 bit
    libraries
  - apparently this version is 64bit:
    #+begin_example
martin@pop-os:~/src/hdl/plutosdr-fw$ find ~/src/hdl/Xilinx/ -name vivado -executable -type f|xargs file
/home/martin/src/hdl/Xilinx/Vivado/2021.1/bin/unwrapped/lnx64.o/vivado: ELF 64-bit LSB executable, x86-64, version 1 (GNU/Linux), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 2.6.32, stripped
    #+end_example
    

- download the repo from analog devices (4.7GB on disk)
  https://wiki.analog.com/university/tools/pluto/obtaining_the_sources
#+begin_example
git clone --recursive https://github.com/analogdevicesinc/plutosdr-fw.git
# ensure sources are up to date
git pull --recurse-submodules
git submodule update --init --recursive
#+end_example
- which vivado version do we need?
  #+begin_example
 grep REQUIRED_VIVADO_VERSION $(find ./ -name "adi*.tcl")|grep set
  #+end_example
  - note this doesn't give a result on master
  - i manually found the file with the definition
    #+begin_example
less ./hdl/projects/scripts/adi_project_xilinx.tcl
# in second line:
set required_vivado_version "2021.1"
    #+end_example
    - in v0.35 it is 2021.1
    - in master it is 
  - i have the correct version installed
- branch after checkout: `git branch` => master
- what branches are available?
  `git branch -r`, that is not what i need
- this is what i want: `git tag` lists v0.35 which is also the last
  released firmware
#+begin_example
git checkout tags/v0.35
#+end_example
   - i don't know how to change the tag such that hdl and other
     submodules change as well in the appropriate way
   - for now i stay on master, let's see if that works
- https://wiki.analog.com/university/tools/pluto/building_the_image
  
- install some packages
  #+begin_example
sudo apt-get install git build-essential ccache device-tree-compiler \
  dfu-util fakeroot help2man libncurses5-dev libssl-dev mtools rsync \
  u-boot-tools bc cpio zip unzip file wget

  #+end_example
- now build
  #+begin_example

export CROSS_COMPILE=arm-linux-gnueabihf-
export PATH=$PATH:/home/martin/Xilinx/Vitis/2021.1/gnu/aarch32/lin/gcc-arm-linux-gnueabi/bin
export VIVADO_SETTINGS=/home/martin/Xilinx/Vivado/2021.1/settings64.sh

unset LD_LIBRARY_PATH

# synthesize each ip indivdually (not tried yet)
export ADI_USE_OOC_SYNTHESIS=y

sudo apt install flex bison

cd /home/martin/src/hdl/plutosdr-fw

make


  #+end_example
  - ther readme in plutosdr-fw states:
     - In the v0.30 release we swithched to the arm-linux-gnueabihf-gcc
       hard-float toolchain.
     - 2019.1 is the current tested FPGA systhesis toolchain (which
       one should i use for v0.35?)

  - note: make doesn't work inside tmux for some reason

  - what does make build
    - note: this is described on
      https://wiki.analog.com/university/tools/pluto/building_the_image
    - build linux
#+begin_example
martin@pop-os:~/src/hdl/plutosdr-fw/linux$ make kernelversion
5.10.0
#+end_example
     - download libraries into /home/martin/src/hdl/plutosdr-fw/buildroot/dl/
    
    - target is pluto

  
  - try again
    - make clean
    - git checkout tags/v0.35
#+begin_example
martin@pop-os:~/src/hdl/plutosdr-fw$ git status
HEAD detached at v0.35
nothing to commit, working tree clean
martin@pop-os:~/src/hdl/plutosdr-fw/hdl$ git status
HEAD detached at d09fc9207

for i in buildroot hdl linux u-boot-xlnx
do
  cd $i
  echo $i
  git status
  cd ..
done

#+end_example

#+begin_example
buildroot:   HEAD detached at b0ed105e9a
hdl:         HEAD detached at d09fc9207
linux:       HEAD detached at 9dfba10b795d
u-boot-xlnx: HEAD detached at 90401ce9ce
#+end_example

  - in a fresh checkout from master the submodules have the same
    versions as v0.35. looking through github i verified that the last
    commit in master is also the tag v0.35
#+begin_example
Submodule path 'buildroot': checked out 'b0ed105e9ab6c60ffd2ddafdfff6890b5cc46ed8'
Submodule path 'hdl': checked out 'd09fc920792c2c67ce5f28179d8263172d46fbdd'
Submodule path 'linux': checked out '9dfba10b795d0004ae90f2ab29dac0197c8a3b3e'
Submodule path 'u-boot-xlnx': checked out '90401ce9ce029e5563f4dface63914d42badf5bc'
#+end_example

 - make sometimes stops with a read (i see that when i attach strace
   to the make process)
 - if i run `strace -f -e execve make` the  build seems to proceed
 
#+begin_example
strace: Process 394264 attached
[pid 394264] execve("/home/martin/src/hdl/2/plutosdr-fw/buildroot/output/build/.check-headers.ZR3eh1", ["/home/martin/src/hdl/2/plutosdr-"...], 0x5613384fd218 /* 94 vars */) = 0
Incorrect selection of kernel headers: expected 4.14.x, got 5.8.x

#+end_example
- the script that prints this message is
  buildroot/support/scripts/check-kernel-headers.sh
- it is called like this
#+begin_example
  [pid 414366] execve("support/scripts/check-kernel-headers.sh", ["support/scripts/check-kernel-hea"..., "/home/martin/src/hdl/2/plutosdr-"..., "/home/martin/Xilinx/Vitis/2021.1"..., "4.14", "strict"], 0x55db70bcf1c0 /* 76 vars */) = 0
#+end_example
  - usage: check-kernel-headers.sh <BUILDDIR> <SYSROOT> <HDR_VER> <CHECK>
    - HDR_VER is of the form X.Y
    - check is strict or loose
- the check-kernel-headers.sh script is called from
  toolchain/helpers.mk:
  #+begin_example
# Check the specified kernel headers version actually matches the
# version in the toolchain.
#
# $1: build directory
# $2: sysroot directory
# $3: kernel version string, in the form: X.Y
# $4: test to do for the latest kernel version, 'strict' or 'loose'
#     always 'strict' if this is not the latest version.
#
check_kernel_headers_version = \
        if ! support/scripts/check-kernel-headers.sh $(1) $(2) $(3) \
                $(if $(BR2_TOOLCHAIN_HEADERS_LATEST),$(4),strict); \
        then \
                exit 1; \
        fi

  #+end_example
 - i will try to change this to 'loose'
 - the next error is:

#+begin_example
Incorrect selection of gcc version: expected 8.x, got 10.2.0
#+end_example
 - looks like the vitis sdk is too new
 - maybe i should really use vivado 2019.1 instead of 2021.1
   
- try to install this: Vivado HLx 2019.1: WebPACK and Editions - Linux
  Self Extracting Web Installer
  - 23GB installed on disk
- i realized that i have 342GB in /dev/nvme0n1p5, in case i need more
  space
- i may need to install the 2019.1 SDK and use the 2021.1 version to
  create fpga bitstream (note: no)
  
- compile with new toolchain
  #+begin_example


export CROSS_COMPILE=arm-linux-gnueabihf-
export PATH=$PATH:/home/martin/Xilinx2019.1/SDK/2019.1/gnu/aarch32/lin/gcc-arm-linux-gnueabi/bin/
export VIVADO_SETTINGS=/home/martin/Xilinx/Vivado/2021.1/settings64.sh

unset LD_LIBRARY_PATH

# synthesize each ip indivdually (not tried yet)
# export ADI_USE_OOC_SYNTHESIS=y



cd /home/martin/src/hdl/plutosdr-fw

make

  #+end_example
- looks like the build succeeded

- testing on the target
#+begin_example
sudo apt-get install sshpass'

ssh root@192.168.2.1
# make sure host key is accepted
pw: analog
# currently i have v0.32 installed


cd ~/src/hdl/
git clone https://github.com/analogdevicesinc/plutosdr_scripts

cd ~/src/hdl/plutosdr-fw
../plutosdr_scripts/pluto_ramboot

#+end_example

- this script will execute /usr/sbin/pluto_reboot ram
- first do a normal firmware update https://wiki.analog.com/university/tools/pluto/users/firmware
#+begin_example
mount
...
/dev/sdb1 on /media/martin/PlutoSDR type vfat (rw,nosuid,nodev,relatime,uid=1000,gid=1000,fmask=0022,dmask=0022,codepage=437,iocharset=iso8859-1,shortname=mixed,showexec,utf8,flush,errors=remount-ro,uhelper=udisks2)

wget https://github.com/analogdevicesinc/plutosdr-fw/releases/download/v0.35/plutosdr-fw-v0.35.zip
unzip plutosdr-fw-v0.35.zip
martin@pop-os:/dev/shm$ ls -tlrh
total 42M
-rw-rw-r-- 1 martin martin  11M Jul 19 13:53 pluto.dfu
-rw-rw---- 1 martin martin 129K Jul 19 13:53 uboot-env.dfu
-rw-rw-r-- 1 martin martin  11M Jul 19 13:53 pluto.frm
-rw-rw-r-- 1 martin martin 572K Jul 19 13:53 boot.frm
-rw-rw-r-- 1 martin martin 443K Jul 19 13:53 boot.dfu
-rw-rw-r-- 1 martin martin  20M Jul 19 15:02 plutosdr-fw-v0.35.zip
cp pluto.frm  /media/martin/PlutoSDR
sudo eject /dev/sdb
# fast flashing of the outside blue led
#+end_example
- that worked, now the ssh prompt shows v0.35
#+begin_example
# ls -lSr|tail -4
-rwxr-xr-x    1 root     root         32180 Jul 19  2022 fftw-wisdom
-rwxr-xr-x    1 root     root         34488 Jul 19  2022 iio_attr
-rwxr-xr-x    1 root     root         47544 Jul 19  2022 xmllint
-rwxr-xr-x    1 root     root        150416 Jul 19  2022 dbus-daemon
# md5sum xmllint iio_attr dbus-daemon 
3cdfe3355047c1dce94ccc92a0e52a83  xmllint
365b02cf86e92dc45c5ba649c851955f  iio_attr
e258eb0208d351c1d9b3c6950f6b6116  dbus-daemon

#+end_example

- in order to bring the device into dfu mode (USB device firmware upgrade):
  - with a toothpick or paper-clip depress the device button while
    plugging in the usb connection or
  - run `device_reboot sf` via terminal or ssh
- in DFU mode the usb pid is 0xB674 (PlutoSDR DFU)

- try ramboot with the image that i built by myself:
#+begin_example
cd ~/src/hdl/plutosdr-fw
../plutosdr_scripts/pluto_ramboot

# ssh command /usr/sbin/pluto_reboot ram; failed

#+end_example
